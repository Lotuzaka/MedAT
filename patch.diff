 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/dev/null b/src/main/java/generator/MerkQuestionGenerator.java
index 0000000000000000000000000000000000000000..d90a5a16449042f362b0bb8249fac9acbabc637e 100644
--- a/dev/null
+++ b/src/main/java/generator/MerkQuestionGenerator.java
@@ -0,0 +1,51 @@
+package generator;
+
+import merk.MerkQuestionEngine;
+import model.AllergyCardData;
+import dao.QuestionDAO;
+import dao.OptionDAO;
+
+import java.sql.Connection;
+import java.sql.SQLException;
+import java.util.List;
+import java.util.Random;
+
+/**
+ * Generates Merkfaehigkeit questions based on the current allergy cards
+ * and inserts them into the database.
+ */
+public class MerkQuestionGenerator {
+    private final Connection conn;
+    private final String category;
+    private final String subcategory;
+    private final Integer simulationId;
+    private final QuestionDAO questionDAO;
+    private final OptionDAO optionDAO;
+    private final MerkQuestionEngine engine;
+
+    public MerkQuestionGenerator(Connection conn, String category, String subcategory,
+                                 Integer simulationId, List<AllergyCardData> cards) {
+        this.conn = conn;
+        this.category = category;
+        this.subcategory = subcategory;
+        this.simulationId = simulationId;
+        this.questionDAO = new QuestionDAO(conn);
+        this.optionDAO = new OptionDAO(conn);
+        this.engine = new MerkQuestionEngine(cards, new Random());
+    }
+
+    public void execute(int count) throws SQLException {
+        int subId = questionDAO.getSubcategoryId(category, subcategory);
+        int qNum = questionDAO.getNextQuestionNumber(simulationId, subId);
+        for (int i = 0; i < count; i++) {
+            MerkQuestionEngine.Question q = engine.generate();
+            int qId = questionDAO.insertQuestion(category, subcategory, q.text(), qNum, simulationId);
+            List<String> options = q.options();
+            for (int j = 0; j < options.size(); j++) {
+                String label = (j == 4) ? "E" : String.valueOf((char)('A' + j));
+                optionDAO.insertOption(qId, label, options.get(j), j == q.correctIndex());
+            }
+            qNum++;
+        }
+    }
+}
 
EOF
)