 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/src/main/java/MedatoninDB.java b/src/main/java/MedatoninDB.java
index 78fef373bdd99749b49ed36f21cb793e93cc8aed..3f47de296cb2380232bf23b09f76f7bc00293e68 100644
--- a/src/main/java/MedatoninDB.java
+++ b/src/main/java/MedatoninDB.java
@@ -108,61 +108,69 @@ public class MedatoninDB extends JFrame {
             for (String available : availableFonts) {
                 if (available.equals(preferred)) {
                     return preferred;
                 }
             }
         }
         return "SansSerif"; // Fallback
     }
 
     /* ------------------------------------------------------------- FIELDS */
 
     // DB
     private Connection conn;
     private QuestionDAO questionDAO;
     private OptionDAO optionDAO;
     private testSimulationDAO simulationDAO;
     private HikariDataSource ds; // Store datasource for proper lifecycle
 
     private String currentUsername; // To store the logged-in username
     // Store sub-databases for each category
     private Map<String, Map<String, DefaultTableModel>> categoryModels = new HashMap<>();
     private Map<String, List<String>> subcategoryOrder = new HashMap<>();
 
     // Mapping of category or subcategory names to introduction page index
     private static final Map<String, Integer> INTRO_PAGE_INDEX = Map.ofEntries(
+            // Science categories
             Map.entry("Biologie", 0),
             Map.entry("Chemie", 1),
             Map.entry("Physik", 2),
             Map.entry("Mathematik", 3),
+
+            // Additional categories that may not be present in the DB
             Map.entry("Textverständnis", 4),
+
+            // KFF subtests – map both the official and database names
             Map.entry("Figuren Zusammensetzen", 5),
+            Map.entry("Figuren", 5),
             Map.entry("Gedächtnis und Merkfähigkeit (Lernphase)", 6),
+            Map.entry("Merkfähigkeiten", 6),
             Map.entry("Zahlenfolgen", 7),
             Map.entry("Wortflüssigkeit", 8),
             Map.entry("Gedächtnis und Merkfähigkeit (Abrufphase)", 9),
             Map.entry("Implikationen erkennen", 10),
+            Map.entry("Implikationen", 10),
             Map.entry("Emotionen regulieren", 11),
             Map.entry("Emotionen erkennen", 12),
             Map.entry("Soziales entscheiden", 13)
     );
 
     private JTable questionTable; // Table to hold questions and checkboxes
     private DefaultTableModel tableModel; // Table model for adding rows
     private JLabel userTextField; // Haupt-Textfeld for real-time editing
 
     private String currentCategory = "Biologie", currentSubcategory = ""; // Track the current subcategory
     private JButton printCategoryButton; // Button that will dynamically change label
     private JButton bioButton, chemButton, physButton, mathButton, kffButton; // Category buttons
     private JPanel subcategoryPanel; // Panel to hold subcategory buttons
     private JButton selectedSubcategoryButton = null; // Class-level variable to keep track of the currently selected
                                                       // subcategory button
 
     private Map<JTable, Integer> tablePendingDeleteRowMap = new HashMap<>(); // Track pending delete row per table
     private ImageIcon gearIcon; // Load the gear icon
     private ImageIcon penIcon; // Load the pen icon
     private ImageIcon penEditIcon; // Load the pen edit icon
 
     private boolean isEditMode = false; // Variable to check if edit mode is enabled
     private Point initialClickPoint; // Initial click point for the drag
     private JButton draggedButton; // Reference to the button being dragged
     private JPanel draggedContainer; // Panel that contains the dragged button
 
EOF
)