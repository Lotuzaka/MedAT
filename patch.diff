 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/src/main/java/MedatoninDB.java b/src/main/java/MedatoninDB.java
index 4d04e9e928f2f178282a91e564e94a56474c6b2d..e0194160e3ebd3e75e83e8b9f2fb833f92c2033e 100644
--- a/src/main/java/MedatoninDB.java
+++ b/src/main/java/MedatoninDB.java
@@ -857,54 +857,57 @@ public class MedatoninDB extends JFrame {
         subcategoryOrder.put(category, orderList);
 
         System.out.println("Category model created for: " + category);
         System.out.println("subcategories: " + subcategories.keySet());
 
         // Load questions for all subcategories
         loadQuestionsFromDatabase(category, subcategories, selectedSimulationId);
     }
 
     // Method to load subcategories and place buttons in the panel
     private void loadSubcategories(String category) {
         subcategoryPanel.removeAll();
         subcategoryPanel.setLayout(new BoxLayout(subcategoryPanel, BoxLayout.Y_AXIS));
         subcategoryPanel.setBackground(backgroundColor);
 
         List<String> orderList = subcategoryOrder.get(category);
         Color subcategoryBackgroundColor = getCategoryButtonColor(category);
 
         if (orderList != null) {
             for (String subcategory : orderList) {
                 // Container fÃ¼r Button und Minus-Button"-
                 JPanel buttonContainer = new JPanel();
                 buttonContainer.setLayout(new BoxLayout(buttonContainer, BoxLayout.X_AXIS));
                 buttonContainer.setBackground(backgroundColor);
                 buttonContainer.setAlignmentX(Component.LEFT_ALIGNMENT);
-                buttonContainer.setMaximumSize(new Dimension(Integer.MAX_VALUE, 35));
-
                 JButton subButton = createModernButton(subcategory);
 
+                // Keep the container height consistent with the button height so
+                // spacing matches the main category buttons
+                buttonContainer.setMaximumSize(new Dimension(Integer.MAX_VALUE,
+                        subButton.getPreferredSize().height));
+
                 if (isEditMode) {
                     addDragAndDropFunctionality(subButton, subcategoryPanel);
                 }
 
                 subButton.addActionListener(e -> {
                     if (!isEditMode) {
                         switchSubcategory(category, subcategory);
                         subButton.setBackground(subcategoryBackgroundColor);
                     }
                 });
 
                 // Right-click to edit text
                 subButton.addMouseListener(new MouseAdapter() {
                     @Override
                     public void mousePressed(MouseEvent e) {
                         if (SwingUtilities.isRightMouseButton(e) && isEditMode) {
                             showSubcategoryMenu(e, subButton, category);
                         }
                     }
                 });
 
                 buttonContainer.add(subButton);
 
                 // Minus-Button nur im Bearbeitungsmodus
                 if (isEditMode) {
 
EOF
)